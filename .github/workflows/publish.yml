name: Publish to NPM

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "examples/**"
      - ".github/workflows/ci.yml"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Check if version has been updated
        id: version-check
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

          # Check if this version is already published
          if npm view i18nexus@$PACKAGE_VERSION version 2>/dev/null; then
            echo "Version $PACKAGE_VERSION is already published"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version $PACKAGE_VERSION is not published yet"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: steps.version-check.outputs.should_publish == 'true'
        run: |
          VERSION=${{ steps.version-check.outputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if tag already exists
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "Tag v$VERSION already exists, skipping tag creation"
          else
            git tag -a "v$VERSION" -m "Release v$VERSION"
            git push origin "v$VERSION"
            echo "Tag v$VERSION created and pushed"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if Release exists
        if: steps.version-check.outputs.should_publish == 'true'
        id: release-check
        run: |
          VERSION=${{ steps.version-check.outputs.version }}
          if gh release view "v$VERSION" >/dev/null 2>&1; then
            echo "Release v$VERSION already exists"
            echo "release_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Release v$VERSION does not exist"
            echo "release_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.should_publish == 'true' && steps.release-check.outputs.release_exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version-check.outputs.version }}
          name: Release v${{ steps.version-check.outputs.version }}
          body: |
            ## ðŸŽ‰ Release v${{ steps.version-check.outputs.version }}

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/docs/CHANGELOG.md) for details.

            ### ðŸ“¦ Installation

            \`\`\`bash
            npm install i18nexus@${{ steps.version-check.outputs.version }}
            \`\`\`

            ### ðŸ”— Links

            - ðŸ“– [Documentation](https://github.com/${{ github.repository }}/tree/main/docs)
            - ðŸ“¦ [npm Package](https://www.npmjs.com/package/i18nexus/v/${{ steps.version-check.outputs.version }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
